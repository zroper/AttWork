%-----------------------------------------------------------------------% Load visual search task% Zach Roper & Josh Cosman % Fall 2009%-----------------------------------------------------------------------% clear memory and windowsclc;clear all;% input subject iddisp('e: experiment, p: practice');expType=input('Enter experiment type: ', 's');if expType == 'e'id=input('Enter subject number:', 's');eid='Het_Sim_';% generate output file namedatafile = strcat(eid, id, '.csv');end%----------------Setting Up Main Window and Frame Rate-----------------hidecursor; MainWindow = SCREEN(0, 'OpenWindow', [255 255 255]); hz=SCREEN(MainWindow,'FrameRate');Frate = 1000/hz;%--------------------------------------------OpenOffscreenWindowsFixationWindow = screen(MainWindow, 'OpenOffscreenWindow', [255 255 255], [0 0 20 20]);DisplayWindow(1) = screen(MainWindow, 'OpenOffscreenWindow', [255 255 255], [0 0 600 600]);%---------------------------------------------- Global propertieswidth=1024;height=768;centerx=width/2;centery=height/2;fx = 20/2;fy = 20/2; dx = 600/2;dy = 600/2;fixDuration = ceil(1000/Frate);ISIDuration = ceil(500/Frate);% color setting red = [255 0 0]; %redgreen = [0 255 0]; %greengrey = [255 255 255]; % grey % object SizeobjectSize = 30;gapSize = 10;%---------------------------------------------- Defining Stimulus ImagesE_Target = imread('E.jpg');H_Target = imread('H.jpg');DistB = imread('B.jpg');DistP = imread('P.jpg');Dist1 = imread('1.jpg');Dist2 = imread('2.jpg');%------------------------------------------% draw fixation on the FixationWindow%------------------------------------------ 	screen(FixationWindow, 'FillRect', [74 74 74], [fx-10 fy-1 fx+10 fy+1]);	screen(FixationWindow, 'FillRect', [74 74 74], [fx-1 fy-10 fx+1 fy+10]);	%------------------------------------------% initialization and trial structure%------------------------------------------Condition = 2; % "b" or "p" SetSize = 3; % 4,8,12,16TType = 2; %H or Eif expType == 'e'	NumTrial = Condition * TType * SetSize * 12 ; % 120 trials for each blockelse	NumTrial = 24;end%------------------------------------------- initializationSelectCondition = zeros(1,NumTrial);SelectSetSize = zeros(1,NumTrial);SelectTType = zeros(1, NumTrial);RT = zeros(1,NumTrial);Accuracy = zeros(1,NumTrial);for i=0 : NumTrial-1;        SelectCondition(i+1) = mod(i/6, Condition);    SelectCondition(i+1) = floor(SelectCondition(i+1))+1; % 1*6, 2*6        SelectSetSize(i+1) = mod(i/2, SetSize);    SelectSetSize(i+1) = floor(SelectSetSize(i+1))+1; % 1*2, 2*2, 3*3        SelectTType(i+1) = mod(i, TType);    SelectTType(i+1) = floor(SelectTType(i+1))+1; % 1*6, 2*6	    Order(i+1) = i + 1; end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% RandomizationOrder = randperm(NumTrial);  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%----------------------------------------------- Introduction	Screen(MainWindow,'TextFont', 'Arial');Screen(MainWindow,'TextSize', 20)screen(MainWindow, 'DrawText', 'Thank you for your participation, please press any key to start', [centerx-180], [centery-5], [0 0 0]);getchar;SCREEN(MainWindow, 'FillRect', [255 255 255]);%---------------Begin trial loopfor TotalTrial = 1 : NumTrial 	         %------------Stimulus Locations Based on CreatePoints.mlist1 = [50 50 250 250]; %Quadrant 1 - upper leftlist2 = [350 50 550 250]; %Quadrant 2 - upper rightlist3 = [350 350 550 550]; %Quadrant 3 - lower rightlist4 = [50 350 250 550]; %Quadrant 4 - lower leftListPossibilities = [1,2,3,4];ListSelect = Shuffle(ListPossibilities);if ListSelect(1) == 1    Quad1 = list1;elseif ListSelect(1) == 2    Quad1 = list2;elseif ListSelect(1) == 3    Quad1 = list3;elseif ListSelect(1) == 4    Quad1 = list4;endif ListSelect(2) == 1    Quad2 = list1;elseif ListSelect(2) == 2    Quad2 = list2;elseif ListSelect(2) == 3    Quad2 = list3;elseif ListSelect(2) == 4    Quad2 = list4;endif ListSelect(3) == 1    Quad3 = list1;elseif ListSelect(3) == 2    Quad3 = list2;elseif ListSelect(3) == 3    Quad3 = list3;elseif ListSelect(3) == 4    Quad3 = list4;endif ListSelect(4) == 1    Quad4 = list1;elseif ListSelect(4) == 2    Quad4 = list2;elseif ListSelect(4) == 3    Quad4 = list3;elseif ListSelect(4) == 4    Quad4 = list4;endpoint4 = [Quad1; Quad1; Quad1; Quad1]; %chooses 4 points within "list"point8 = [Quad1; Quad2; Quad1; Quad2; Quad1; Quad2; Quad1; Quad2];point12 = [Quad1; Quad2; Quad3; Quad1; Quad2; Quad3; Quad1; Quad2; Quad3; Quad1; Quad2; Quad3];                   %##########################################% Trial starts%##########################################     	 %---------------------------------------------------------------------------- set stimuli locations        if SelectSetSize(Order(TotalTrial)) == 1 % set size 4			points = point4;			items = 4;		elseif SelectSetSize(Order(TotalTrial)) == 2 % set size 8			points = point8;			items = 8;		elseif SelectSetSize(Order(TotalTrial)) == 3  % set size 12			points = point12;			items = 12;		elseif SelectSetSize(Order(TotalTrial)) == 4  % set size 12			points = point16;			items = 16;        end            	    locations = createPoints(points, [dx dy], 80, 60, 400);%-----------------------------------------------------------------------------Draw fixation for DisplayWindowsscreen(DisplayWindow(1), 'FillRect', [74 74 74], [dx-10 dy-1 dx+10 dy+1]);screen(DisplayWindow(1), 'FillRect', [74 74 74], [dx-1 dy-10 dx+1 dy+10]);%----------------------------------------------------------------------------- Draw target and distractors	for i = 1 : items			%-------------------------------------------------------------------------For target		if SelectTType(Order(TotalTrial)) == 1 % E Target	            if i == 1 % first item is always a target				SCREEN(DisplayWindow(1), 'PutImage', E_Target,[locations(i,1) locations(i,2) locations(i,1)+objectSize locations(i,2)+objectSize]);            else                    if SelectCondition(Order(TotalTrial)) == 1 % both conditions the same here					if i <= items/2 % HERE WE ARE TELLING IT TO PRESENT HALF THE DIST ITEMS OF ONE TYPE AND HALF OF THE OTHER TYPE						SCREEN(DisplayWindow(1), 'PutImage', DistP,[locations(i,1) locations(i,2) locations(i,1)+objectSize locations(i,2)+objectSize]);					else						SCREEN(DisplayWindow(1), 'PutImage', DistB,[locations(i,1) locations(i,2) locations(i,1)+objectSize locations(i,2)+objectSize]);					end						else % 					if i <= items/2 % HERE WE ARE TELLING IT TO PRESENT HALF THE DIST ITEMS OF ONE TYPE AND HALF OF THE OTHER TYPE						SCREEN(DisplayWindow(1), 'PutImage', DistP,[locations(i,1) locations(i,2) locations(i,1)+objectSize locations(i,2)+objectSize]);					else						SCREEN(DisplayWindow(1), 'PutImage', DistB,[locations(i,1) locations(i,2) locations(i,1)+objectSize locations(i,2)+objectSize]);					end	                end            end        else %H Target            if i == 1 % first item is always a target				SCREEN(DisplayWindow(1), 'PutImage', H_Target,[locations(i,1) locations(i,2) locations(i,1)+objectSize locations(i,2)+objectSize]);            else                    if SelectCondition(Order(TotalTrial)) == 1 % Similar Condition					if i <= items/2 % HERE WE ARE TELLING IT TO PRESENT HALF THE DIST ITEMS OF ONE TYPE AND HALF OF THE OTHER TYPE						SCREEN(DisplayWindow(1), 'PutImage', DistP,[locations(i,1) locations(i,2) locations(i,1)+objectSize locations(i,2)+objectSize]);					else						SCREEN(DisplayWindow(1), 'PutImage', DistB,[locations(i,1) locations(i,2) locations(i,1)+objectSize locations(i,2)+objectSize]);					end						else % Dissimilar Condition					if i <= items/2% HERE WE ARE TELLING IT TO PRESENT HALF THE DIST ITEMS OF ONE TYPE AND HALF OF THE OTHER TYPE						SCREEN(DisplayWindow(1), 'PutImage', DistP,[locations(i,1) locations(i,2) locations(i,1)+objectSize locations(i,2)+objectSize]);					else						SCREEN(DisplayWindow(1), 'PutImage', DistB,[locations(i,1) locations(i,2) locations(i,1)+objectSize locations(i,2)+objectSize]);					end	                end            end		end                    	end		        %-------------------------------------------------------------------------Presenting Displays	    SCREEN('CopyWindow', FixationWindow, MainWindow, [0 0 20 20], [centerx-10 centery-10 centerx+10 centery+10]);          SCREEN(MainWindow, 'WaitBlanking', fixDuration); % 1000 ms	 		FlushEvents('keyDown');	    GetSecs; % the time when the RT recording starts		a=0; b=0; c=0;    	system_time=GetSecs;    	resp_time=0;	    		SCREEN('CopyWindow', DisplayWindow(1), MainWindow, [0 0 600 600], [centerx-300 centery-300 centerx+300 centery+300]); 		    			code=getchar; % what key the subject presses		[a b c]=KbCheck;	     	resp_time=b-system_time;				SCREEN(MainWindow, 'FillRect', [255 255 255]);    	%-------------------------------------------------------------- Abort Experimentc    if code == '+'		eval('foo','clear screen; error(''halted by experimenter'')');	end%-------------------------------------------------------------- Accuracy	if SelectTType(Order(TotalTrial)) == 1 % E target			if code=='n' %correct answer	   		     Accuracy(TotalTrial)=1; %correct			else		    	 Accuracy(TotalTrial)=0; %incorrent			end	else  % H Target			if code=='m' %correct answer		    	 Accuracy(TotalTrial)=1; %correct			else			  	 Accuracy(TotalTrial)=0; %incorrect			end    end%------------------------------------------------------------ Breaksif TotalTrial == 48||TotalTrial == 96    SCREEN(MainWindow, 'FillRect', [255 255 255]);    SCREEN(MainWindow, 'DrawText', 'Take a break.  Press any key to continue experiment.', centerx-190, centery+5, [0 0 0]);	getchar;	SCREEN(MainWindow, 'FillRect', [255 255 255]);end%------------------------------------------------------------ ISI 500 ms	    SCREEN(DisplayWindow(1), 'FillRect', [255 255 255]);		SCREEN(MainWindow, 'WaitBlanking', ISIDuration); %------------------------------------------------------------ only for experiment save data	if expType == 'e'			  RT(TotalTrial)=resp_time*1000; %Record RT  	 	if (TotalTrial>=1)  			FID = fopen(datafile, 'w');   			Save = [Order(1:TotalTrial); SelectCondition(Order(1:TotalTrial)); SelectSetSize(Order(1:TotalTrial)); SelectTType(Order(1:TotalTrial)); Accuracy(1:TotalTrial); RT(1:TotalTrial)];   			fprintf(FID, 'Order, Condition, Setsize, TType, Accuracy, RT\n');   			fprintf(FID, '%7d, %7d, %7d, %7d, %7d, %5.4f\n', Save);   			fclose(FID);   		end	end%------------------------------------------------------------------    end % end for Trial loop%------------------------------------------------------- close an experiment	if expType == 'e'			screen(MainWindow, 'DrawText', 'Press any key to continue', [centerx-80], [centery-5], [0 0 0]);		getchar;	end	showcursor;	screen('CloseAll');                